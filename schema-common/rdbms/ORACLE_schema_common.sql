CREATE TABLE IAMUSER.SECURITY_DOMAIN (
       DOMAIN_ID            VARCHAR2(20) NOT NULL,
       NAME         		VARCHAR2(40) NULL,
       STATUS				VARCHAR2(20) NULL,
       /* Refers to which managed system to use for authentication */
	   AUTH_SYS_ID			VARCHAR2(20) NULL,
	   LOGIN_MODULE			VARCHAR2(100) NULL,
       /* Default policies for the domain */
       PASSWORD_POLICY	    	VARCHAR2(32) NULL,
       AUTHENTICATION_POLICY	VARCHAR2(32) NULL,
       AUDIT_POLICY	    		VARCHAR2(32) NULL,
	PRIMARY KEY (DOMAIN_ID)
);

CREATE TABLE IAMUSER.LANGUAGE (
       LANGUAGE_CD          VARCHAR2(5) NOT NULL,
       LANGUAGE             VARCHAR2(20) NULL,
	   LOCALE				INTEGER DEFAULT (0) NULL,
       PRIMARY KEY (LANGUAGE_CD)
);

CREATE TABLE IAMUSER.BATCH_CONFIG (
	   TASK_ID 						VARCHAR2(32) NOT NULL,
	   TASK_NAME 					VARCHAR2(50) NULL,
	   /* 10080, 1440, 60, 15 MINUTES */
     FREQUENCY					INTEGER NULL,
	   FREQUENCY_UNIT_OF_MEASURE	VARCHAR2(10) NULL,
	   LAST_EXEC_TIME				DATE NULL,
	   EXECUTION_ORDER			INTEGER DEFAULT (1) NULL,
	   ENABLED 							INTEGER DEFAULT (1) NULL,
	   TASK_URL            	VARCHAR2(255) NULL,
	   STATUS 							VARCHAR2(20) NULL,
	   PARAM1 							VARCHAR2(255) NULL,
 	   PARAM2 							VARCHAR2(255) NULL,
 	   PARAM3 							VARCHAR2(255) NULL,
	   PARAM4 							VARCHAR2(255) NULL, 
	   RULE_TYPE						VARCHAR2(20) DEFAULT 'GROOVY',
       PRIMARY KEY (TASK_ID)
);


CREATE TABLE IAMUSER.EXCLUDE_WORD_LIST (
       WORD                 VARCHAR2(30) NOT NULL,
       LANGUAGE_CD          VARCHAR2(5) NOT NULL,
       PRIMARY KEY (WORD, LANGUAGE_CD), 
	CONSTRAINT FK_EXCLUDE_WORD_LIST_LANGUAGE
       FOREIGN KEY (LANGUAGE_CD)
                             REFERENCES IAMUSER.LANGUAGE(LANGUAGE_CD)
);


CREATE TABLE IAMUSER.CATEGORY(
       CATEGORY_ID          VARCHAR2(20) NOT NULL,
       PARENT_ID            VARCHAR2(20) NULL,
       CATEGORY_NAME        VARCHAR2(40) NULL,
	   	 CATEGORY_DESC        	VARCHAR2(80) NULL,
       CREATE_DATE			DATE NULL,
       CREATED_BY			VARCHAR2(20) NULL,
       SHOW_LIST            INTEGER DEFAULT (0) NULL,
       DISPLAY_ORDER        INTEGER DEFAULT (0) NULL,
       PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE IAMUSER.CATEGORY_LANGUAGE (
       CATEGORY_ID          VARCHAR2(20) NOT NULL,
       LANGUAGE_CD          VARCHAR2(5) NOT NULL,
       CATEGORY_NAME        VARCHAR2(40) NULL,
       PRIMARY KEY (CATEGORY_ID, LANGUAGE_CD), 
	 CONSTRAINT FK_CATEGORY_LANGUAGE_LANGUAGE
       FOREIGN KEY (LANGUAGE_CD)
                             REFERENCES IAMUSER.LANGUAGE(LANGUAGE_CD), 
	 CONSTRAINT FK_CATEGORY_LANGUAGE_CATEGORY
       FOREIGN KEY (CATEGORY_ID)
                             REFERENCES IAMUSER.CATEGORY(CATEGORY_ID) ON DELETE CASCADE
);



CREATE TABLE IAMUSER.METADATA_TYPE (
       TYPE_ID              VARCHAR2(20) NOT NULL,
       DESCRIPTION          VARCHAR2(40) NULL,
	   ACTIVE				INTEGER DEFAULT (0) NULL,
	   SYNC_MANAGED_SYS		INTEGER DEFAULT (0) NULL,
       PRIMARY KEY (TYPE_ID)
);


CREATE TABLE IAMUSER.METADATA_ELEMENT (
       METADATA_ID          VARCHAR2(20) NOT NULL,
       TYPE_ID              VARCHAR2(20) NOT NULL,
       ATTRIBUTE_NAME       VARCHAR2(50) NULL,
       DESCRIPTION          VARCHAR2(40) NULL,
	   MIN_LEN				INTEGER DEFAULT (0) NULL,
	   MAX_LEN				INTEGER NULL,	   
	   TEXT_CASE			VARCHAR2(20) NULL,
	   DATA_TYPE			VARCHAR2(20) NULL,
	   MIN_VALUE			INTEGER NULL,
		MAX_VALUE			INTEGER NULL,
		DEFAULT_VALUE		VARCHAR2(100) NULL,
		VALUE_LIST			VARCHAR2(1000),
		LABEL				VARCHAR2(100),
		MULTI_VALUE			INTEGER NULL,
		AUDITABLE			INTEGER NULL,
		REQUIRED			INTEGER NULL,
		SELF_EDITABLE		INTEGER NULL,
		SELF_VIEWABLE		INTEGER NULL,
		UI_TYPE				VARCHAR2(20) NULL,
		UI_OBJECT_SIZE		VARCHAR2(40) NULL,
		VALUE_SRC			VARCHAR2(1000) NULL,
       PRIMARY KEY (METADATA_ID), 
	 CONSTRAINT FK_ML_METADATA_TYPE     
	 FOREIGN KEY (TYPE_ID)
                 REFERENCES IAMUSER.METADATA_TYPE(TYPE_ID)
);





CREATE TABLE IAMUSER.COMPANY (
       COMPANY_ID           VARCHAR2(32) NOT NULL,
       COMPANY_NAME         VARCHAR2(200) NULL,
       LST_UPDATE           DATE NULL,
       LST_UPDATED_BY		VARCHAR2(40) NULL,
       PARENT_ID            VARCHAR2(32) NULL,
       STATUS			    VARCHAR2(20) NULL,
       TYPE_ID              VARCHAR2(20) NULL,
	   CREATE_DATE			DATE NULL,
	   CREATED_BY			VARCHAR2(20) NULL,
	   ALIAS				VARCHAR2(200) NULL,
	   DESCRIPTION			VARCHAR2(200) NULL,
	   DOMAIN_NAME			VARCHAR2(40) NULL,
	   LDAP_STR				VARCHAR2(255) NULL,	
	   CLASSIFICATION		VARCHAR2(40) NULL,	
	   INTERNAL_COMPANY_ID	VARCHAR2(200) NULL,
	   ABBREVIATION 		VARCHAR2(20) NULL,
       SYMBOL				VARCHAR2(10) NULL,
 	   PRIMARY KEY (COMPANY_ID), 
	CONSTRAINT FK_COMPANY_METADATA_TYPE
       FOREIGN KEY (TYPE_ID)
                             REFERENCES IAMUSER.METADATA_TYPE(TYPE_ID)
);



CREATE TABLE IAMUSER.COMPANY_ATTRIBUTE (
       COMPANY_ATTR_ID      VARCHAR2(32) NOT NULL,
       COMPANY_ID           VARCHAR2(32) NULL,
       NAME                 VARCHAR2(20) NULL,
       VALUE                VARCHAR2(255) NULL,
       METADATA_ID          VARCHAR2(20) NULL,
       PRIMARY KEY (COMPANY_ATTR_ID), 
	CONSTRAINT FK_COMPANY_ATTRIBUTE_COMPANY
       FOREIGN KEY (COMPANY_ID)
                             REFERENCES IAMUSER.COMPANY(COMPANY_ID),
	CONSTRAINT FK_COMPANY_METADATA_ELEMENT	 
       FOREIGN KEY (METADATA_ID)
                             REFERENCES IAMUSER.METADATA_ELEMENT(METADATA_ID)
); 


CREATE TABLE IAMUSER.USERS(
       USER_ID              VARCHAR2(32) NOT NULL,
       FIRST_NAME           VARCHAR2(50) NULL,
       LAST_NAME            VARCHAR2(50) NULL,
       MIDDLE_INIT          VARCHAR2(50) NULL,
       TYPE_ID              VARCHAR2(20) NULL,
	   CLASSIFICATION		VARCHAR2(20) NULL,
       TITLE                VARCHAR2(100) NULL,
	   DEPT_CD				VARCHAR2(50) NULL, /* Dept - can POINT TO AN OU in a directory */
	   DEPT_NAME			VARCHAR2(100) NULL,
	   MAIL_CODE			VARCHAR2(50) NULL,	   
       DIVISION				VARCHAR2(50) NULL,
		COST_CENTER			VARCHAR2(20) NULL,
	    STATUS              VARCHAR2(40) NULL,
	   SECONDARY_STATUS		VARCHAR2(40) NULL,
       BIRTHDATE            DATE NULL,
       SEX                  char(1) NULL,
	   CREATE_DATE			DATE NULL,
 	   CREATED_BY			VARCHAR2(40) NULL,
	   LAST_UPDATE			DATE NULL,
	   LAST_UPDATED_BY		VARCHAR2(40) NULL,
       PREFIX               VARCHAR2(4) NULL,
       SUFFIX               VARCHAR2(20) NULL,
       USER_TYPE_IND		VARCHAR2(20) NULL,
       EMPLOYEE_ID			VARCHAR2(32) NULL,
       EMPLOYEE_TYPE		VARCHAR2(20) NULL,	/* TEMP, FULL-TIME, INTERN, PART-TIME, CONTRACTOR,  */			
       LOCATION_CD			VARCHAR2(50) NULL,
	   LOCATION_NAME		VARCHAR2(100) NULL,
       COMPANY_ID        	VARCHAR2(32) NULL,
       COMPANY_OWNER_ID		VARCHAR2(32) NULL,
       JOB_CODE				VARCHAR2(50) NULL,
       MANAGER_ID			VARCHAR2(32) NULL,
	   ALTERNATE_ID			VARCHAR2(32) NULL,  /* ALTERNATE PERSON TO CONTACT WHEN THIS USER IS NOT AVAILABLE. */
	   START_DATE			DATE NULL,
       LAST_DATE			DATE NULL,
 	   MAIDEN_NAME 			VARCHAR2(40) NULL,
 	   NICKNAME 			VARCHAR2(40) NULL,
	   PASSWORD_THEME		VARCHAR2(20) NULL,
	   COUNTRY              VARCHAR2(30) NULL,
	   BLDG_NUM				VARCHAR2(10) NULL,
	   STREET_DIRECTION		VARCHAR2(20) NULL,
	   SUITE				VARCHAR2(20) NULL,
       ADDRESS1             VARCHAR2(45) NULL,
       ADDRESS2             VARCHAR2(45) NULL,
	   ADDRESS3             VARCHAR2(45) NULL,
	   ADDRESS4             VARCHAR2(45) NULL,
	   ADDRESS5             VARCHAR2(45) NULL,
	   ADDRESS6             VARCHAR2(45) NULL,
	   ADDRESS7             VARCHAR2(45) NULL,
       CITY                 VARCHAR2(30) NULL,
       STATE                VARCHAR2(15) NULL,
       POSTAL_CD            VARCHAR2(10) NULL,
	   EMAIL_ADDRESS        VARCHAR2(320) NULL,
	   AREA_CD              VARCHAR2(10) NULL,
       COUNTRY_CD           VARCHAR2(3) NULL,
       PHONE_NBR            VARCHAR2(50) NULL,
       PHONE_EXT			VARCHAR2(20) NULL,
	   SHOW_IN_SEARCH		INTEGER NULL,
	   DEL_ADMIN							INTEGER NULL,
	   USER_OWNER_ID					VARCHAR2(32) NULL,
	   DATE_PASSWORD_CHANGED	DATE NULL,
	   DATE_CHALLENGE_RESP_CHANGED	DATE NULL,
	   PRIMARY KEY (USER_ID), 
	CONSTRAINT FK_USERS_METADATA_TYPE
         FOREIGN KEY (TYPE_ID)
                             	REFERENCES IAMUSER.METADATA_TYPE(TYPE_ID)
);



CREATE TABLE IAMUSER.ORG_STRUCTURE (
	ORG_STRUCTURE_ID	VARCHAR2(32) NOT NULL,
	SUPERVISOR_ID		VARCHAR2(32) NOT NULL,
	STAFF_ID			VARCHAR2(32) NOT NULL,
	SUPERVISOR_TYPE		VARCHAR2(20) NULL,
    IS_PRIMARY_SUPER	INTEGER DEFAULT (0) NULL,
	START_DATE			DATE NULL,
	END_DATE			DATE NULL,
	STATUS				VARCHAR2(20) NULL,
    COMMENTS			VARCHAR2(255) NULL,
    PRIMARY KEY (ORG_STRUCTURE_ID),
	CONSTRAINT FK_SUPR_USER
         FOREIGN KEY (SUPERVISOR_ID)
                             	REFERENCES IAMUSER.USERS(USER_ID),
	CONSTRAINT FK_STAFF_USER
         FOREIGN KEY (STAFF_ID)
                             	REFERENCES IAMUSER.USERS(USER_ID)
);


CREATE TABLE IAMUSER.USER_NOTE(
       USER_NOTE_ID   VARCHAR2(32) NOT NULL,
       USER_ID              VARCHAR2(32) NULL,
       NOTE_TYPE			VARCHAR2(20) NULL,
       DESCRIPTION			VARCHAR2(1000) NULL,
       CREATE_DATE			DATE NULL,
       CREATED_BY			VARCHAR2(20) NULL,
       PRIMARY KEY (USER_NOTE_ID), 
	CONSTRAINT FK_USER_NOTE_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES IAMUSER.USERS(USER_ID)
);
CREATE TABLE IAMUSER.USER_ATTACHMENT_REF (
       USER_ATTACH_REF_ID   VARCHAR2(20) NOT NULL,
       USER_ID              VARCHAR2(20) NULL,
       NAME                 VARCHAR2(20) NULL,
       VALUE                VARCHAR2(50) NULL,
       URL                  VARCHAR2(50) NULL,
       PRIMARY KEY (USER_ATTACH_REF_ID), 
	CONSTRAINT FK_USER_ATTACHMENT_REF_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES IAMUSER.USERS(USER_ID)
);


CREATE TABLE IAMUSER.USER_ATTRIBUTES (
       ID                   VARCHAR2(32) NOT NULL,
       USER_ID              VARCHAR2(32) NULL,
       METADATA_ID          VARCHAR2(20) NULL,
       NAME                 VARCHAR2(50) NULL,
       VALUE                VARCHAR2(1000) NULL,
	   ATTR_GROUP			VARCHAR2(20) NULL,
       PRIMARY KEY (ID),
	CONSTRAINT FK_USER_ATTR_METADATA_ELEMENT
       FOREIGN KEY (METADATA_ID)
                             REFERENCES IAMUSER.METADATA_ELEMENT(METADATA_ID), 
       FOREIGN KEY (USER_ID)
                             REFERENCES IAMUSER.USERS(USER_ID)
); 

CREATE TABLE IAMUSER.USER_DELEGATION_ATTRIBUTE (
       ID                   varchar2(32) NOT NULL,
       USER_ID              varchar2(32) NULL,
       OBJ_TYPE             varchar2(50) NULL,	/*USER, ORG, ETC */
       NAME                 varchar2(50) NULL,
       VALUE                varchar2(255) NULL,
       PRIMARY KEY (ID),
       FOREIGN KEY (USER_ID)
                             REFERENCES IAMUSER.USERS(USER_ID)
);

 CREATE TABLE IAMUSER.USER_AFFILIATION (
		USER_AFFILIATION_ID		VARCHAR2(32) NOT NULL,
        COMPANY_ID  VARCHAR2(32) NOT NULL,
        USER_ID     VARCHAR2(32) NOT NULL,
		STATUS				VARCHAR2(20) NULL,
        CREATE_DATE			DATE NULL,
        START_DATE			DATE NULL,
        END_DATE			DATE NULL,
        CREATED_BY			VARCHAR2(32) NULL,
	PRIMARY KEY (USER_AFFILIATION_ID),
	   CONSTRAINT FK_USR_ORG_AFFL
        FOREIGN KEY (COMPANY_ID) REFERENCES IAMUSER.COMPANY(COMPANY_ID),
       CONSTRAINT FK_USR_USER_AFFIL
		FOREIGN KEY (USER_ID) REFERENCES IAMUSER.USERS(USER_ID)
);



CREATE TABLE IAMUSER.SERVICE (
       SERVICE_ID           VARCHAR2(20) NOT NULL,
       SERVICE_NAME         VARCHAR2(40) NULL,
       STATUS				VARCHAR2(20) NULL,
       LOCATION_IP_ADDRESS	VARCHAR2(80) NULL,
       COMPANY_OWNER_ID		VARCHAR2(20) NULL,
       START_DATE			DATE NULL,
       END_DATE				DATE NULL,
       LICENSE_KEY			VARCHAR2(255) NULL,	
       SERVICE_TYPE			VARCHAR2(20) NULL,
       PARENT_SERVICE_ID	VARCHAR2(20) NULL,
       ROOT_RESOURCE_ID     VARCHAR2(20) NULL,
       ACCESS_CONTROL_MODEL VARCHAR2(20) NULL,
	   PARAM1		VARCHAR2(20) NULL,
	   PARAM2		VARCHAR2(20) NULL,
	   PARAM3		VARCHAR2(20) NULL,
	   PARAM4		VARCHAR2(20) NULL,
	   PARAM5		VARCHAR2(20) NULL,
       PRIMARY KEY (SERVICE_ID)
);



CREATE TABLE IAMUSER.SERVICE_CONFIG (
       SERVICE_CONFIG_ID    VARCHAR2(20) NOT NULL,
       SERVICE_ID           VARCHAR2(20) NULL,
       NAME                 VARCHAR2(40) NULL,
       VALUE                VARCHAR2(40) NULL,
       PRIMARY KEY (SERVICE_CONFIG_ID),
       CONSTRAINT FK_SRV_SRV_CONF
       FOREIGN KEY (SERVICE_ID)
                             REFERENCES IAMUSER.SERVICE(SERVICE_ID)
);



CREATE TABLE IAMUSER.STATUS (
       STATUS_CD           	VARCHAR2(40) NOT NULL,
	   STATUS_TYPE			VARCHAR2(20) NULL,
       DESCRIPTION          VARCHAR2(80) NULL,
       CODE_GROUP			VARCHAR2(40) NOT NULL,
       LANGUAGE_CD			VARCHAR2(2) NOT NULL,
	   COMPANY_OWNER_ID		VARCHAR2(32) NOT NULL,
	   SERVICE_ID			VARCHAR2(20) NOT NULL,
       WEIGHT				INTEGER NULL,
       PRIMARY KEY (CODE_GROUP, STATUS_CD, LANGUAGE_CD)
);


CREATE TABLE IAMUSER.MENU (
       MENU_ID              VARCHAR2(20) NOT NULL,
       LANGUAGE_CD          VARCHAR2(5)  DEFAULT ('en') NOT NULL,
       MENU_GROUP           VARCHAR2(20) NULL,
       MENU_NAME            VARCHAR2(40) NULL,
       MENU_DESC            VARCHAR2(40) NULL,
       URL                  VARCHAR2(100) NULL,
       ACTIVE               INTEGER NULL,
       DISPLAY_ORDER        INTEGER NULL,
	   PUBLIC_URL				INTEGER NULL,
       PRIMARY KEY (MENU_ID, LANGUAGE_CD)
);


CREATE TABLE IAMUSER.GRP (
       GRP_ID               VARCHAR2(32) NOT NULL,
       GRP_NAME             VARCHAR2(80) NULL,
       CREATE_DATE			DATE NULL,
       CREATED_BY			VARCHAR2(20) NULL,
       COMPANY_ID			VARCHAR2(32) NULL,
	   OWNER_ID				VARCHAR2(32) NULL,
       PARENT_GRP_ID		VARCHAR2(32) NULL,
       INHERIT_FROM_PARENT	INTEGER DEFAULT (0) NULL,
       PROVISION_METHOD		VARCHAR2(20) NULL,
       PROVISION_OBJ_NAME	VARCHAR2(80) NULL,
       TYPE_ID              VARCHAR2(20) NULL,
	   GROUP_CLASS			VARCHAR2(40) NULL,
	   GROUP_DESC			VARCHAR2(80) NULL,
   	   STATUS				VARCHAR2(20) NULL,
	   LAST_UPDATE			DATE NULL,
	   LAST_UPDATED_BY		VARCHAR2(32) NULL,	   
	   POLICY_ID			VARCHAR2(20) NULL,
	   INTERNAL_GROUP_ID	VARCHAR2(32) NULL,
	   EXTERNAL_GRP_NAME	VARCHAR2(200) NULL,
	   GROUP_APPROVER_ID	VARCHAR2(32) NULL,
       PRIMARY KEY (GRP_ID),
       CONSTRAINT FK_GRP_METADATA_TYPE
         FOREIGN KEY (TYPE_ID)
                             	REFERENCES IAMUSER.METADATA_TYPE(TYPE_ID)
);


CREATE TABLE IAMUSER.GRP_ATTRIBUTES (
       ID                   VARCHAR2(32) NOT NULL,
       GRP_ID               VARCHAR2(32) NULL,
       METADATA_ID          VARCHAR2(20) NULL,
       NAME                 VARCHAR2(20) NULL,
       VALUE                VARCHAR2(255) NULL,
       PRIMARY KEY (ID),
	CONSTRAINT FK_GRP_ATTR_METADATA_ELEMENT
       FOREIGN KEY (METADATA_ID)
                             REFERENCES IAMUSER.METADATA_ELEMENT(METADATA_ID), 
       FOREIGN KEY (GRP_ID)
                             REFERENCES IAMUSER.GRP(GRP_ID)
);


CREATE TABLE IAMUSER.USER_GRP(
	USER_GRP_ID			VARCHAR2(32) NOT NULL,
   	GRP_ID              VARCHAR2(32) NOT NULL,
   	USER_ID             VARCHAR2(32) NOT NULL,
	STATUS				VARCHAR2(20) DEFAULT ('ACTIVE') NULL,  
    CREATE_DATE			DATE NULL,
    CREATED_BY			VARCHAR2(32) NULL,
   	START_DATE			DATE NULL,
   	END_DATE				DATE NULL,
	PRIMARY KEY (USER_GRP_ID),
       CONSTRAINT FK_USR_GRP_GPR
       FOREIGN KEY (GRP_ID)  REFERENCES IAMUSER.GRP(GRP_ID),
       CONSTRAINT FK_USR_GRP_USR
       FOREIGN KEY (USER_ID)  REFERENCES IAMUSER.USERS(USER_ID)
);


CREATE TABLE IAMUSER.PERMISSIONS (
       MENU_ID              VARCHAR2(20) NOT NULL,
       SERVICE_ID           varchar2(20) NOT NULL,
       ROLE_ID              VARCHAR2(32) NOT NULL,
       PRIMARY KEY (SERVICE_ID, ROLE_ID, MENU_ID)
);


CREATE TABLE IAMUSER.SEQUENCE_GEN (
       ATTRIBUTE            VARCHAR2(32) NOT NULL,
       NEXT_ID              INTEGER NULL,
       PRIMARY KEY (ATTRIBUTE)
);

CREATE TABLE IAMUSER.RELATION_SET (
       RELATION_SET_ID      VARCHAR2(20) NOT NULL,
       DESCRIPTION          VARCHAR2(80) NULL,
       PRIMARY KEY (RELATION_SET_ID)
); 


CREATE TABLE IAMUSER.RELATION_CATEGORY (
       RELATION_SET_ID      VARCHAR2(20) NOT NULL,
       CATEGORY_ID          VARCHAR2(20) NOT NULL,
       PRIMARY KEY (RELATION_SET_ID, CATEGORY_ID), 
	CONSTRAINT FK_RL_CATEGORY_CATEGORY
       FOREIGN KEY (CATEGORY_ID) REFERENCES IAMUSER.CATEGORY(CATEGORY_ID),
	CONSTRAINT FK_RL_CATEGORY_RELATION_SET
       FOREIGN KEY (RELATION_SET_ID) REFERENCES IAMUSER.RELATION_SET(RELATION_SET_ID)
); 



CREATE TABLE IAMUSER.RELATIONSHIP (
       RELATIONSHIP_ID      VARCHAR2(20) NOT NULL,
       RELATION_SET_ID      VARCHAR2(20) NULL,
       ITEM_OBJ             VARCHAR2(20) NULL,
       ITEM_ID              VARCHAR2(20) NULL,
       RANK                 INTEGER NULL,
       ACTIVE               INTEGER NULL,
       PRIMARY KEY (RELATIONSHIP_ID), 
	CONSTRAINT FK_RELATIONSHIP_RELATION_SET
       FOREIGN KEY (RELATION_SET_ID)
                             REFERENCES IAMUSER.RELATION_SET(RELATION_SET_ID)
);


CREATE TABLE IAMUSER.RELATION_TYPE (
       RELATION_TYPE_ID     VARCHAR2(20) NOT NULL,
       DESCRIPTION          VARCHAR2(80) NOT NULL,
       PRIMARY KEY (RELATION_TYPE_ID)
);


CREATE TABLE IAMUSER.RELATION_SOURCE (
       RELATION_TYPE_ID     VARCHAR2(20) NOT NULL,
       SOURCE_OBJ           VARCHAR2(20) NOT NULL,
       SOURCE_ID            VARCHAR2(20) NOT NULL,
       RELATION_SET_ID      VARCHAR2(20) NULL,
       PRIMARY KEY (RELATION_TYPE_ID, SOURCE_OBJ, SOURCE_ID), 
       CONSTRAINT FK_RL_SOURCE_RELATION_SET
       FOREIGN KEY (RELATION_SET_ID)
                             REFERENCES IAMUSER.RELATION_SET (RELATION_SET_ID), 
	CONSTRAINT FK_RL_SOURCE_RELATION_TYPE
       FOREIGN KEY (RELATION_TYPE_ID)
                             REFERENCES IAMUSER.RELATION_TYPE(RELATION_TYPE_ID)
) ; 

CREATE TABLE IAMUSER.CATEGORY_TYPE (
       CATEGORY_ID          VARCHAR2(20) NOT NULL,
       TYPE_ID              VARCHAR2(20) NOT NULL,
       PRIMARY KEY (TYPE_ID, CATEGORY_ID), 
	CONSTRAINT FK_CATEGORY_TYPE_CATEGORY
       FOREIGN KEY (CATEGORY_ID)
                             REFERENCES IAMUSER.CATEGORY(CATEGORY_ID), 
	CONSTRAINT FK_CATEGORY_METADATA_TYPE
       FOREIGN KEY (TYPE_ID)
                             REFERENCES IAMUSER.METADATA_TYPE(TYPE_ID)
);

CREATE TABLE IAMUSER.IMAGE (
       IMAGE_ID             VARCHAR2(20) NOT NULL,
       IMAGE_FILE           VARCHAR2(80) NULL,
       IMAGE_TYPE           VARCHAR2(20) NULL,
       DESCRIPTION          VARCHAR2(250) NULL,
       MIME_TYPE            VARCHAR2(30) NULL,
       URL                  VARCHAR2(100) NULL,
       FILE_SIZE            INTEGER NULL,
       IMAGE_BLOB           BLOB NULL,
       PRIMARY KEY (IMAGE_ID)
) ; 

CREATE TABLE IAMUSER.LOCATION (
       LOCATION_ID           VARCHAR2(32) NOT NULL,
	   NAME					VARCHAR2(80) NULL,
	   DESCRIPTION			VARCHAR2(255) NULL,
       COUNTRY              VARCHAR2(30) NULL,
	   BLDG_NUM				VARCHAR2(10) NULL,
	   STREET_DIRECTION		VARCHAR2(20) NULL,
       ADDRESS1             VARCHAR2(45) NULL,
       ADDRESS2             VARCHAR2(45) NULL,
	   ADDRESS3             VARCHAR2(45) NULL,
       CITY                 VARCHAR2(30) NULL,
       STATE                VARCHAR2(15) NULL,
       POSTAL_CD            VARCHAR2(10) NULL,
	   ORGANIZATION_ID		VARCHAR2(32) NULL,
	   INTERNAL_LOCATION_ID	VARCHAR2(32) NULL,
       ACTIVE				INTEGER DEFAULT (1) NULL,
       PRIMARY KEY (LOCATION_ID)
);

CREATE TABLE IAMUSER.ADDRESS (
       ADDRESS_ID           VARCHAR2(32) NOT NULL,
	   NAME					VARCHAR2(40) NULL,
       COUNTRY              VARCHAR2(30) NULL,
	   BLDG_NUM				VARCHAR2(10) NULL,
	   STREET_DIRECTION		VARCHAR2(20) NULL,
	   SUITE				VARCHAR2(20) NULL,
       ADDRESS1             VARCHAR2(45) NULL,
       ADDRESS2             VARCHAR2(45) NULL,
	   ADDRESS3             VARCHAR2(45) NULL,
	   ADDRESS4             VARCHAR2(45) NULL,
	   ADDRESS5             VARCHAR2(45) NULL,
	   ADDRESS6             VARCHAR2(45) NULL,
	   ADDRESS7             VARCHAR2(45) NULL,
       CITY                 VARCHAR2(30) NULL,
       STATE                VARCHAR2(15) NULL,
       POSTAL_CD            VARCHAR2(10) NULL,
       IS_DEFAULT           INTEGER DEFAULT (0) NULL,
       DESCRIPTION          VARCHAR2(100) NULL,
       ACTIVE				INTEGER DEFAULT (1) NULL,
       PARENT_ID            VARCHAR2(32) NULL,
       PARENT_TYPE          VARCHAR2(30) NULL,
       PRIMARY KEY (ADDRESS_ID)
); 


CREATE TABLE IAMUSER.EMAIL_ADDRESS (
       EMAIL_ID             VARCHAR2(32) NOT NULL,
	   NAME					VARCHAR2(40) NULL,
       DESCRIPTION          VARCHAR2(100) NULL,
       EMAIL_ADDRESS        VARCHAR2(320) NULL,
       IS_DEFAULT           INTEGER NULL,
       ACTIVE				INTEGER DEFAULT (1) NULL,
       PARENT_ID            VARCHAR2(32) NULL,
       PARENT_TYPE          VARCHAR2(30) NULL,
       PRIMARY KEY (EMAIL_ID)
) ; 


CREATE TABLE IAMUSER.PHONE (
       PHONE_ID             VARCHAR2(32) NOT NULL,
	   NAME					VARCHAR2(40) NULL,
       AREA_CD              VARCHAR2(10) NULL,
       COUNTRY_CD           VARCHAR2(3) NULL,
       DESCRIPTION          VARCHAR2(100) NULL,
       PHONE_NBR            VARCHAR2(50) NULL,
       PHONE_EXT			VARCHAR2(20) NULL,
       IS_DEFAULT           INTEGER NULL,
       ACTIVE				INTEGER DEFAULT (1) NULL,
       PARENT_ID            VARCHAR2(32) NULL,
       PARENT_TYPE          VARCHAR2(30) NULL,
	   PHONE_TYPE			VARCHAR2(20) NULL,
       PRIMARY KEY (PHONE_ID)
);

CREATE TABLE IAMUSER.ROLE(
       ROLE_ID              VARCHAR2(32) NOT NULL,
       SERVICE_ID           VARCHAR2(20) NOT NULL,
       ROLE_NAME            VARCHAR2(80) NULL,
       CREATE_DATE			DATE NULL,
       CREATED_BY			VARCHAR2(32) NULL,
       DESCRIPTION          VARCHAR2(255) NULL,
       PROVISION_OBJ_NAME   VARCHAR2(80) NULL,
	   PARENT_ROLE_ID		VARCHAR2(32) NULL,
	   TYPE_ID				VARCHAR2(20) NULL,
	   INHERIT_FROM_PARENT	INTEGER NULL,
	   OWNER_ID				VARCHAR2(32) NULL,
       STATUS				VARCHAR2(20) NULL,
	   INTERNAL_ROLE_ID		VARCHAR2(32) NULL,
	   ROLE_APPROVER_ID	VARCHAR2(32) NULL,
	   ROLE_END_DATE			DATE NULL,
      	 PRIMARY KEY (ROLE_ID, SERVICE_ID), 
	CONSTRAINT FK_ROLE_SERVICE
       FOREIGN KEY (SERVICE_ID) REFERENCES IAMUSER.SECURITY_DOMAIN(DOMAIN_ID)
);


CREATE TABLE IAMUSER.ROLE_ATTRIBUTE (
	   ROLE_ATTR_ID			VARCHAR2(32) NOT NULL,
       NAME                 VARCHAR2(40) NULL,
       VALUE                VARCHAR2(255) NULL,
       METADATA_ID          VARCHAR2(20) NULL,
       ROLE_ID        	 	VARCHAR2(32) NOT NULL,
	   SERVICE_ID           VARCHAR2(20) NOT NULL,
	   ATTR_GROUP			VARCHAR2(20) NULL,
       PRIMARY KEY (ROLE_ATTR_ID),
	CONSTRAINT FK_ROLE_ROLE_ATTRIBUTE
       FOREIGN KEY (ROLE_ID,SERVICE_ID)
                             REFERENCES IAMUSER.ROLE(ROLE_ID,SERVICE_ID)
);


CREATE TABLE IAMUSER.ROLE_POLICY (
   ROLE_POLICY_ID VARCHAR2(32) NOT NULL,
   ROLE_ID 				VARCHAR2(32) NULL,
   SERVICE_ID 		VARCHAR2(20) NULL,
   ACTION 				VARCHAR2(20) NULL,
   NAME 					VARCHAR2(40) NULL,
   VALUE1 				VARCHAR2(40) NULL,
   VALUE2 				VARCHAR2(40) NULL,
   ACTION_QUALIFIER		VARCHAR2(20)	 NULL,
   POLICY_SCRIPT 		VARCHAR2(100) NULL,
   EXECUTION_ORDER INT,
   PRIMARY KEY (ROLE_POLICY_ID),
   CONSTRAINT FK_ROLE_ROLE_POLICY
  		FOREIGN KEY (ROLE_ID, SERVICE_ID) REFERENCES IAMUSER.ROLE(ROLE_ID, SERVICE_ID)
);


CREATE TABLE IAMUSER.GRP_ROLE(
	   SERVICE_ID           VARCHAR2(20) NOT NULL,
	   ROLE_ID              VARCHAR2(32) NOT NULL,
       GRP_ID               VARCHAR2(32) NOT NULL,
	PRIMARY KEY (SERVICE_ID, ROLE_ID, GRP_ID),
       CONSTRAINT FK_GRP_ROLE_ROLE
       FOREIGN KEY (ROLE_ID,SERVICE_ID)  REFERENCES IAMUSER.ROLE(ROLE_ID,SERVICE_ID),
       CONSTRAINT FK_GRP_ROLE_GRP
       FOREIGN KEY (GRP_ID)  REFERENCES IAMUSER.GRP(GRP_ID)
);

CREATE TABLE IAMUSER.USER_ROLE (
		USER_ROLE_ID		VARCHAR2(32) NOT NULL,
	   	SERVICE_ID			VARCHAR2(20) NOT NULL,
	   	ROLE_ID             VARCHAR2(32) NOT NULL,
       	USER_ID             VARCHAR2(32) NOT NULL,
		STATUS				VARCHAR2(20) NULL,	 
	   	START_DATE			DATE NULL,
    	END_DATE			DATE NULL,
    	CREATE_DATE			DATE NULL,
    	CREATED_BY			VARCHAR2(32) NULL,
	PRIMARY KEY (SERVICE_ID, ROLE_ID, USER_ID),
	   CONSTRAINT FK_USR_ROLE_ROLE
        FOREIGN KEY (ROLE_ID,SERVICE_ID)
                             REFERENCES IAMUSER.ROLE(ROLE_ID,SERVICE_ID), 
       CONSTRAINT FK_USR_ROLE_USR
		FOREIGN KEY (USER_ID)
                             REFERENCES IAMUSER.USERS(USER_ID)
);


CREATE TABLE IAMUSER.RESOURCE_TYPE(
       RESOURCE_TYPE_ID     VARCHAR2(20) NOT NULL,
       DESCRIPTION          VARCHAR2(100) NULL,
       METADATA_TYPE_ID     VARCHAR2(20) NULL,
       PROVISION_RESOURCE   INTEGER NULL,
       PROCESS_NAME         VARCHAR2(80) NULL,
  PRIMARY KEY (RESOURCE_TYPE_ID)
);


CREATE TABLE IAMUSER.RES(
       RESOURCE_ID          VARCHAR2(32) NOT NULL,
       RESOURCE_TYPE_ID     VARCHAR2(20) NULL,
       DESCRIPTION          VARCHAR2(100) NULL,
	   	 NAME      			VARCHAR2(40) NULL,
       RESOURCE_PARENT      VARCHAR2(32) NULL,
       BRANCH_ID            VARCHAR2(32) NULL,
       CATEGORY_ID	    	VARCHAR2(20) NULL,
       DISPLAY_ORDER	    INTEGER DEFAULT (1) NULL,
       NODE_LEVEL	    	INTEGER DEFAULT (1) NULL,
       SENSITIVE_APP		INTEGER DEFAULT (0) NULL,
	   MANAGED_SYS_ID		VARCHAR2(32) NULL,
	   URL							VARCHAR2(255) NULL,
       PRIMARY KEY (RESOURCE_ID), 
	CONSTRAINT FK_RESOURCE_RESOURCE_TYPE
       FOREIGN KEY (RESOURCE_TYPE_ID)  REFERENCES IAMUSER.RESOURCE_TYPE(RESOURCE_TYPE_ID),
	CONSTRAINT FK_RESOURCE_CATEGORY
       FOREIGN KEY (CATEGORY_ID) REFERENCES IAMUSER.CATEGORY(CATEGORY_ID)
);



CREATE TABLE IAMUSER.RESOURCE_PROP (
       RESOURCE_PROP_ID     VARCHAR2(32) NOT NULL,
       RESOURCE_ID          VARCHAR2(32) NULL,
       METADATA_ID          VARCHAR2(20) NULL,
	     NAME					VARCHAR2(40) NOT NULL,
       PROP_VALUE           VARCHAR2(500) NULL,
       PROP_GROUP           VARCHAR2(20) NULL,
       PRIMARY KEY (RESOURCE_PROP_ID), 
	CONSTRAINT FK_RESOURCE_PROP_RESOURCE
       FOREIGN KEY (RESOURCE_ID) REFERENCES IAMUSER.RES(RESOURCE_ID)
);


CREATE TABLE IAMUSER.PRIVILEGE(
       PRIVILEGE_ID         VARCHAR2(32) NOT NULL,
       RESOURCE_ID			VARCHAR2(32) NOT NULL,
       DESCRIPTION          VARCHAR2(40) NULL,
       ABBRV		    VARCHAR2(3) NOT NULL,
       PRIMARY KEY (PRIVILEGE_ID)
); 

CREATE TABLE IAMUSER.RESOURCE_USER(
 	   RESOURCE_USER_ID    	VARCHAR2(32) NOT NULL,
       RESOURCE_ID          VARCHAR2(32) NOT NULL,
       USER_ID              VARCHAR2(32) NOT NULL,
       PRIVILEGE_LIST       VARCHAR2(100) NULL,
	   OP_AGAINST_ROLE		INTEGER NULL,
	   STATUS				VARCHAR2(20) NULL,
	   START_DATE			DATE NULL,
       END_DATE				DATE NULL, 
       PRIMARY KEY (RESOURCE_USER_ID), 
	CONSTRAINT FK_RESOURCE_USER_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES IAMUSER.USERS(USER_ID), 
       FOREIGN KEY (RESOURCE_ID)
                             REFERENCES IAMUSER.RES(RESOURCE_ID)
);
CREATE TABLE IAMUSER.RESOURCE_ROLE(
       RESOURCE_ID          VARCHAR2(32) NOT NULL,
       SERVICE_ID           VARCHAR2(20) NOT NULL,
       ROLE_ID              VARCHAR2(32) NOT NULL,
       PRIVILEGE_ID         VARCHAR2(100) NULL,
       START_DATE			DATE NULL,
       END_DATE				DATE NULL,
       PRIMARY KEY (RESOURCE_ID, SERVICE_ID, ROLE_ID, PRIVILEGE_ID),
	CONSTRAINT FK_RESOURCE_ROLE_ROLE
       FOREIGN KEY (ROLE_ID, SERVICE_ID)
                             REFERENCES IAMUSER.ROLE(ROLE_ID, SERVICE_ID), 
	CONSTRAINT FK_RESOURCE_ROLE_RESOURCE
       FOREIGN KEY (RESOURCE_ID)
                             REFERENCES IAMUSER.RES(RESOURCE_ID)
);

CREATE TABLE IAMUSER.RESOURCE_GROUP(
       RES_GROUP_ID         VARCHAR2(32) NOT NULL,
       RESOURCE_ID          varchar2(32) NOT NULL,
       GRP_ID               varchar2(32) NOT NULL,
       START_DATE			DATE NULL,
       END_DATE				DATE NULL,
       PRIMARY KEY (RES_GROUP_ID),
	CONSTRAINT FK_RESOURCE_GRP
       FOREIGN KEY (GRP_ID)
                             REFERENCES IAMUSER.GRP(GRP_ID),
	CONSTRAINT FK_RESOURCE_GRP_RESOURCE
       FOREIGN KEY (RESOURCE_ID)
                             REFERENCES IAMUSER.RES(RESOURCE_ID)
);


CREATE TABLE IAMUSER.RESOURCE_COMPANY(
       RESOURCE_ID      varchar2(32) NOT NULL,
       COMPANY_ID       varchar2(32) NOT NULL,
	   		STATUS					VARCHAR2(20) NULL,
	   		START_DATE			DATE NULL,
	   		LAST_DATE 			DATE NULL,
       PRIMARY KEY (RESOURCE_ID, COMPANY_ID), 
       CONSTRAINT FK_RESOURCE_COMPANY
       FOREIGN KEY (COMPANY_ID)
				 REFERENCES IAMUSER.COMPANY(COMPANY_ID)
);
CREATE TABLE IAMUSER.LOGIN(
       SERVICE_ID           VARCHAR2(20) NOT NULL,
       LOGIN                VARCHAR2(320) NOT NULL,
	   MANAGED_SYS_ID 		VARCHAR2(32) NOT NULL,
	   IDENTITY_TYPE		VARCHAR2(20) NULL,			/* SSO, PROVISION, BOTH */
	   CANONICAL_NAME		VARCHAR2(100) NULL,
       USER_ID              VARCHAR2(32) NULL,
       PASSWORD             VARCHAR2(80) NULL,
       PWD_EQUIVALENT_TOKEN VARCHAR2(80) NULL,
       PWD_CHANGED          DATE NULL,				/* last time the password was changed */
       PWD_EXP              DATE NULL,				/* date when the pswd expires */
       RESET_PWD	    	integer DEFAULT (0) NOT NULL,		/* 1 - PASSWORD HAS BEEN RESET. FIRST TIME LOGIN*/
       FIRST_TIME_LOGIN	   	integer DEFAULT (1) NOT NULL,	
       IS_LOCKED	        integer DEFAULT (0) NOT NULL,		/* IS THIS IDENTITY LOCKED  */
       STATUS		    	VARCHAR2(20) NULL,			/* STATUS OF THIS IDENTITY  */
       GRACE_PERIOD			DATE NULL, 				/* WHEN THE GRACE_PRD_EXP 	*/	
       CREATE_DATE			DATE NULL,
       CREATED_BY			VARCHAR2(32) NULL,
       CURRENT_LOGIN_HOST	VARCHAR2(40) NULL,		/* HOST FROM WHICH YOU ARE LOGGED IN*/	
       AUTH_FAIL_COUNT		INTEGER DEFAULT (0) NOT NULL,				/* NUMBER OF TIMES AUTH. HAS FAILED */
       LAST_AUTH_ATTEMPT	DATE NULL,	    	/* WHEN WAS THE LAST AUTH. ATTEMPT  */   
	   LAST_LOGIN			DATE NULL,			/* LAST TIME THE PERSON SUCCESSFULLY LOGGED IN */
	   LAST_LOGIN_IP        VARCHAR2(60) NULL,
	   PREV_LOGIN           DATE NULL,
	   PREV_LOGIN_IP        VARCHAR2(60) NULL,
	   IS_DEFAULT			INTEGER DEFAULT (0) NULL,	
 	   PWD_CHANGE_COUNT	INTEGER DEFAULT (0) NULL,
       PRIMARY KEY (SERVICE_ID, LOGIN,MANAGED_SYS_ID), 
	CONSTRAINT FK_LOGIN_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES IAMUSER.USERS(USER_ID), 
       CONSTRAINT FK_LOGIN_SERVICE
       FOREIGN KEY (SERVICE_ID)
                             REFERENCES IAMUSER.SECURITY_DOMAIN(DOMAIN_ID)
) ; 

CREATE TABLE IAMUSER.LOGIN_ATTRIBUTE (
	   LOGIN_ATTR_ID		VARCHAR2(32) NOT NULL,
       LOGIN                VARCHAR2(320) NOT NULL,
       SERVICE_ID	    	VARCHAR2(20) NOT NULL,
       MANAGED_SYS_ID       VARCHAR2(32) NOT NULL,
       NAME                 VARCHAR2(20) NULL,
       VALUE                VARCHAR2(255) NULL,
       METADATA_ID          VARCHAR2(20) NULL,
	   ATTR_GROUP			VARCHAR2(20) NULL,
       PRIMARY KEY (LOGIN_ATTR_ID), 
	CONSTRAINT FK_LOGIN_LOGIN_ATTRIBUTE
       FOREIGN KEY (SERVICE_ID, LOGIN,  MANAGED_SYS_ID)
                             REFERENCES IAMUSER.LOGIN(SERVICE_ID, LOGIN,  MANAGED_SYS_ID)
) ; 


CREATE TABLE IAMUSER.AUTH_STATE (
       USER_ID              VARCHAR2(32) NOT NULL,
       AUTH_STATE           numeric(5,1) NULL,
       TOKEN                VARCHAR2(2000) NULL,
       AA                   VARCHAR2(20) NULL,
       EXPIRATION           numeric(18,0) NULL,
       LAST_LOGIN	    DATE NULL,
       IP_ADDRESS	    VARCHAR2(20) NULL,
       PRIMARY KEY (USER_ID), 
	CONSTRAINT FK_AUTH_STATE_USERS FOREIGN KEY (USER_ID) REFERENCES IAMUSER.USERS (USER_ID)
);


CREATE TABLE IAMUSER.PWD_HISTORY (
	   PWD_HISTORY_ID		VARCHAR2(32) NOT NULL,
       LOGIN                VARCHAR2(320) NOT NULL,
       SERVICE_ID	    	VARCHAR2(20) NOT NULL,
	    MANAGED_SYS_ID		VARCHAR2(32) NOT NULL,
       DATE_CREATED         DATE NOT NULL,
       PASSWORD             VARCHAR2(80) NULL,
       PRIMARY KEY (PWD_HISTORY_ID)
);


CREATE TABLE IAMUSER.CREDENTIALS (
       USER_ID              VARCHAR2(32) NOT NULL,
       CREDENTIAL_TYPE      VARCHAR2(20) NOT NULL,
       VALUE                VARCHAR2(100) NULL,
       IS_PUBLIC            INTEGER,
       PRIMARY KEY (USER_ID, CREDENTIAL_TYPE), 
	CONSTRAINT FK_CREDENTIALS_USERS
       FOREIGN KEY (USER_ID)
                             REFERENCES IAMUSER.USERS(USER_ID)
);


CREATE TABLE IAMUSER.IDM_AUDIT_LOG (
      LOG_ID        	VARCHAR2(32) NOT NULL,
      OBJECT_TYPE_ID    VARCHAR2(20) NOT NULL,            /* TYPE OF OBJECT THAT IS BEING AUDITED */
	  OBJECT_ID    		VARCHAR2(32) NULL,                /* ID OF THE OBJECT THAT IS BEING AUDITED */
      ACTION_ID         VARCHAR2(50) NOT NULL,            /* TYPE OF ACTION                              */
      ACTION_STATUS     VARCHAR2(100) NULL,                /* STATUS OF THE ACTION                               */                                 
      REASON            VARCHAR2(1000) NULL,                /* REASON WHY THE STATUS IS WHAT IT IS. IF AUTH_FAILS, THEN WHY */
      REASON_DETAIL    	CLOB NULL,                       /* INCASE WE WANT TO CAPTURE SOME OUTPUT LIKE AN EXCEPTION LOG  */
      ACTION_DATETIME 	TIMESTAMP NULL,               /* DATE AND TIME THIS EVENT OCCURED.                                          */
      ACTION_END_DATETIME 	TIMESTAMP NULL,               /* DATE AND TIME THIS EVENT OCCURED.                                          */
      OBJECT_NAME      	VARCHAR2(255) NULL,               /* OBJECT THAT WAS ACTED UPON                                                     */
      RESOURCE_NAME 	VARCHAR2(255) NULL,               /* RESOURCE INVOLVED IN THIS TASK                                                */
      USER_ID              VARCHAR2(32) NULL,
      SERVICE_ID           VARCHAR2(20) NULL,
      LOGIN_ID             VARCHAR2(320) NULL,     
      HOST                 VARCHAR2(60) NULL,              /* HOST WHERE THE EVENT OCCURRED */
       NODE_IP              VARCHAR2(60) NULL,              /* NODE THAT SENT THE REQUEST TO THE IDM SERVER */
      CLIENT_ID            VARCHAR2(20) NULL,              /* CLIENT, AGENT OR INTERFACE WHERE THIS EVENT OCCURRED      */
      REQ_URL              VARCHAR2(255) NULL,
      LINKED_LOG_ID		 	VARCHAR2(40) NULL,			  /* INDICATES IF THIS EVENT IS LINKED TO ANOTHER EVENT 		*/
	  LINK_SEQUENCE			INTEGER NULL,
	  ORIG_OBJECT_STATE   	CLOB NULL,                     /* SNAP SHOT OF THE ORIGINAL OBJECT                 */
      NEW_OBJECT_STATE		CLOB NULL,
	  LOG_HASH   			VARCHAR2(80) NULL,                     /* VALUES THAT WERE CHANGED DURING THIS OPERATION                 */
	  SRC_SYSTEM_ID 		VARCHAR2(40) NULL, 
 	  TARGET_SYSTEM_ID 		VARCHAR2(40) NULL,
	  REQUEST_ID			VARCHAR2(40) NULL,
      SESSION_ID			VARCHAR2(40) NULL,
	  CUSTOM_ATTRNAME1          VARCHAR2(255) NULL,        /* additional NAME fileds that can be used to have their own columns instead of in big blob. */
      CUSTOM_ATTRNAME2          VARCHAR2(255) NULL,
      CUSTOM_ATTRNAME3          VARCHAR2(255) NULL,
      CUSTOM_ATTRNAME4          VARCHAR2(255) NULL,
      CUSTOM_ATTRNAME5          VARCHAR2(255) NULL,
      CUSTOM_ATTRNAME6          VARCHAR2(255) NULL,
      CUSTOM_ATTRNAME7          VARCHAR2(255) NULL,
      CUSTOM_ATTRNAME8          VARCHAR2(255) NULL,
      CUSTOM_ATTRNAME9          VARCHAR2(255) NULL,
      CUSTOM_ATTRNAME10         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE1         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE2         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE3         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE4         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE5         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE6         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE7         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE8         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE9         VARCHAR2(255) NULL,
      CUSTOM_ATTRVALUE10      	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME1       	VARCHAR2(255) NULL,           /* additional NAME fileds that can be used to have their own columns instead of in big blob. */
      CUSTOM_PARAMNAME2       	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME3       	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME4       	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME5       	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME6       	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME7       	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME8       	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME9       	VARCHAR2(255) NULL,
      CUSTOM_PARAMNAME10    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE1    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE2    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE3    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE4    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE5    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE6    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE7    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE8    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE9    	VARCHAR2(255) NULL,
      CUSTOM_PARAMVALUE10   	VARCHAR2(255) NULL,
      PRIMARY KEY (LOG_ID)
);

CREATE TABLE IAMUSER.ORG_POLICY (
   ORG_POLICY_ID 			VARCHAR2(32) NOT NULL,
   NAME						VARCHAR2(40) NULL,
   TARGET_AUDIENCE_TYPE 	VARCHAR2(20) NULL,
   TARGET_AUDIENCE 			VARCHAR2(255) NULL,
   START_DATE 				DATE NULL,
   END_DATE 				DATE NULL,
   POLICY_TEXT 				CLOB NULL,
	PRIMARY KEY(ORG_POLICY_ID)
);

CREATE TABLE IAMUSER.ORG_POLICY_USER_LOG (
   ORG_POLICY_LOG_ID 		VARCHAR2(32) NOT NULL,
   ORG_POLICY_ID 			VARCHAR2(32) NOT NULL,
   USER_ID 					VARCHAR2(32) NOT NULL,
   TIME_STAMP				DATE NOT NULL,
   RESPONSE					VARCHAR2(255) NULL,
	PRIMARY KEY(ORG_POLICY_LOG_ID)
);

CREATE TABLE IAMUSER.IAM_SYS_MESSAGES (
   MSG_DELIVERY_ID 			  VARCHAR2(32) NOT NULL,
   NAME						        VARCHAR2(40) NULL,
   TARGET_AUDIENCE_TYPE 	VARCHAR2(20) NULL,
   TARGET_AUDIENCE 			   VARCHAR2(255) NULL,
   START_DATE 				    DATE NULL,
   END_DATE 				      DATE NULL,
   MSG_SUBJECT 				    VARCHAR2(100) NULL,
   MSG 						CLOB NULL,
   SHOW_ON_RESOURCE			VARCHAR2(40) NULL,
   DELIVER_BY				VARCHAR2(20) NULL,  /* EMAIL, ONLINE */
   MSG_FROM					VARCHAR2(80) NULL,  /* IF ITS AN EMAIL */
	PRIMARY KEY(MSG_DELIVERY_ID)
);


CREATE INDEX IAMUSER.IDX_USER_FIRSTNAME_UPPER ON IAMUSER.USERS
(UPPER(FIRST_NAME))
LOGGING
NOPARALLEL;

CREATE INDEX IAMUSER.IDX_USER_LASTNAME_UPPER ON IAMUSER.USERS
(UPPER(LAST_NAME))
LOGGING
NOPARALLEL;


CREATE INDEX IAMUSER.IDX_USER_MI_UPPER ON IAMUSER.USERS
(UPPER(MIDDLE_INIT))
LOGGING
NOPARALLEL;

CREATE INDEX IAMUSER.IDX_UA_NAME_UPPER ON IAMUSER.USER_ATTRIBUTES
(UPPER(NAME))
LOGGING
NOPARALLEL;


CREATE INDEX IAMUSER.IDX_UA_VALUE_UPPER ON IAMUSER.USER_ATTRIBUTES
(UPPER(VALUE))
LOGGING
NOPARALLEL;

CREATE INDEX IAMUSER.IDX_COMPANY_NAME_UPPER ON IAMUSER.COMPANY
(UPPER(COMPANY_NAME))
LOGGING
NOPARALLEL;


CREATE INDEX IAMUSER.IDX_LOGIN_UPPER ON IAMUSER.LOGIN
(UPPER(LOGIN))
LOGGING
NOPARALLEL;


CREATE INDEX IAMUSER.IDX_USER_EMAIL_UPPER ON IAMUSER.USERS
(UPPER(EMAIL_ADDRESS))
LOGGING
NOPARALLEL;


CREATE INDEX IAMUSER.IDX_EMAIL_ADDR_UPPER ON IAMUSER.EMAIL_ADDRESS
(UPPER(EMAIL_ADDRESS))
LOGGING
NOPARALLEL;

commit;